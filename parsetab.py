
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTIVATE AND ARROW ASSERT ASSUME AT AUTOMATON BODY BOOL CASE CHAR CLOCK COLON COMMA CONST CURRENT DEFAULT DIV DIVIDE DO ELSE ELSIF EMIT END ENUM EQU EVERY EXPONENT EXTERN FALSE FBY FINAL FLATTEN FLOAT FLOAT32 FLOAT64 FOLD FOLDI FOLDW FOLDWI FUNCTION GREATER GREATEREQU GROUP GUARANTEE HASHTAG IF IMPORTED INCLUDE INITIAL INT INT16 INT32 INT64 INT8 INTCONST INTEGER INTEGERNUM IS LAND LAST LBPARENTHESE LBRACKET LESS LESSEQU LET LNOT LOR LPARENTHESE LSHIFT LSL LSR LV6ID LV6IDREF LXOR MAKE MAP MAPFOLD MAPFOLDI MAPFOLDW MAPFOLDWI MAPI MAPW MAPWI MATCH MERGE MINUS MOD MODEL NEEDS NODE NOEQU NOR NOT NUMERIC OF OPEN OR PACKAGE PLUS POINT PRE PRIVATE PROBE PROVIDES PUBLIC RBPARENTHESE RBRACKET REAL REALCONST RESTART RESUME RETURNS REVERSE RPARENTHESE RSHIFT SEMICOLON SENSOR SHIFT SIG SIGNED SINGLEQUOTE SPECIALIZE STAR STATE STEP STRUCT SURPLUS SYNCHRO TEL THEN TIMES TPOINT TRANSPOSE TRUE TYPE UINT16 UINT32 UINT64 UINT8 UNLESS UNSAFE UNSIGNED UNTIL USES VAR VERTICALBAR WHEN WHERE WITH XORProgram : Decls_zero_or_modeDecls_zero_or_mode : Decls Decls_zero_or_mode\n    | emptyDecls : Const_block\n    | Package_decl\n    | User_op_declPackage_decl : Package Visibility_zero_or_one Lv6id Decls_zero_or_mode END SEMICOLONUser_op_decl : Op_kind Interface_status LV6ID User_op_decl_1 Params RETURNS Params User_op_decl_2 User_op_decl_3 Opt_bodyLv6id : LV6IDOp_kind : FUNCTION\n    | NODEOpt_body : SEMICOLON\n    | Equation SEMICOLONEquation : Simple_equationSimple_equation : Lhs EQU ExprLhs : LPARENTHESE RPARENTHESE\n    | Lhs_id Lhs_1Lhs_1 : COMMA Lhs_id Lhs_1\n    | emptyLhs_id : LV6IDUser_op_decl_1 : emptyUser_op_decl_2 : emptyUser_op_decl_3 : emptyParams : LPARENTHESE Params_1 RPARENTHESEParams_1 : Var_decls Params_2\n    | emptyParams_2 : SEMICOLON Var_decls Params_2\n    | emptyVar_decls : Var_id Var_decls_1 COLON Type_expr Var_decls_2 Var_decls_3 Var_decls_4Var_decls_1 : COMMA Var_id Var_decls_1\n    | emptyVar_id : Var_id_1 Var_id_2 LV6IDVar_id_1 : CLOCK\n    | emptyVar_id_2 : PROBE\n    | emptyVar_decls_2 : emptyVar_decls_3 : emptyVar_decls_4 : emptyPackage : PACKAGEConst_block : CONST Const_decl SEMICOLON Const_block\n    | emptyConst_decl : Interface_status LV6ID COLON Type_expr EQU Expr\n    | Interface_status LV6ID COLON Type_exprInterface_status : Visibility_zero_or_one External\n    | Visibility_zero_or_oneVisibility_zero_or_one : Visibility\n    | emptyExternal : IMPORTEDVisibility : PRIVATE\n    | PUBLICType_expr : BOOL\n    | INT32\n    | INT8Expr : Atom\n    | Arith_exprArith_expr : Expr Bin_arith_op ExprBin_arith_op : PLUS\n    | MINUS\n    | STAR\n    | DIVIDE\n    | MOD\n    | LAND\n    | LOR\n    | LXOR\n    | LSL\n    | LSRAtom : Bool_atom\n    | INTCONSTBool_atom : TRUE\n    | FALSEempty : '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,14,24,31,32,45,96,97,105,],[-72,0,-1,-72,-3,-4,-5,-6,-2,-72,-41,-42,-7,-8,-12,-13,]),'CONST':([0,3,4,5,6,7,24,28,29,31,32,45,96,97,105,],[8,8,-42,-4,-5,-6,8,8,-9,-41,-42,-7,-8,-12,-13,]),'PACKAGE':([0,3,4,5,6,7,24,28,29,31,32,45,96,97,105,],[11,11,-42,-4,-5,-6,-72,11,-9,-41,-42,-7,-8,-12,-13,]),'FUNCTION':([0,3,4,5,6,7,24,28,29,31,32,45,96,97,105,],[12,12,-42,-4,-5,-6,-72,12,-9,-41,-42,-7,-8,-12,-13,]),'NODE':([0,3,4,5,6,7,24,28,29,31,32,45,96,97,105,],[13,13,-42,-4,-5,-6,-72,13,-9,-41,-42,-7,-8,-12,-13,]),'END':([3,4,5,6,7,14,24,28,29,31,32,34,45,96,97,105,],[-72,-3,-4,-5,-6,-2,-72,-72,-9,-41,-42,41,-7,-8,-12,-13,]),'PRIVATE':([8,9,10,11,12,13,],[20,20,20,-40,-10,-11,]),'PUBLIC':([8,9,10,11,12,13,],[21,21,21,-40,-10,-11,]),'IMPORTED':([8,10,12,13,17,18,19,20,21,],[-72,-72,-10,-11,27,-47,-48,-50,-51,]),'LV6ID':([8,9,10,11,12,13,16,17,18,19,20,21,22,23,26,27,43,49,51,52,60,61,63,66,68,69,70,82,83,85,90,91,109,],[-72,-72,-72,-40,-10,-11,25,-46,-47,-48,-50,-51,29,30,-45,-49,-72,-34,-72,-33,-72,-24,-72,-72,88,-35,-36,-72,-22,-34,95,-23,95,]),'SEMICOLON':([15,37,38,39,40,41,48,53,54,55,56,57,58,59,60,61,82,83,84,89,90,91,93,98,99,103,104,111,112,113,115,116,],[24,-44,-52,-53,-54,45,63,-43,-55,-56,-68,-69,-70,-71,-72,-24,-72,-22,63,-57,97,-23,-72,105,-14,-72,-37,-72,-38,-15,-29,-39,]),'COLON':([25,50,65,67,87,88,94,],[33,-72,86,-31,-72,-32,-30,]),'LPARENTHESE':([30,35,36,46,60,61,82,83,90,91,],[-72,43,-21,43,-72,-24,-72,-22,101,-23,]),'BOOL':([33,86,],[38,38,]),'INT32':([33,86,],[39,39,]),'INT8':([33,86,],[40,40,]),'EQU':([37,38,39,40,95,100,102,107,108,110,114,117,],[44,-52,-53,-54,-20,106,-72,-16,-17,-19,-72,-18,]),'RPARENTHESE':([38,39,40,43,47,48,49,62,64,84,92,93,101,103,104,111,112,115,116,],[-52,-53,-54,-72,61,-72,-26,-25,-28,-72,-27,-72,107,-72,-37,-72,-38,-29,-39,]),'RETURNS':([42,61,],[46,-24,]),'PROBE':([43,49,51,52,63,66,85,],[-72,-34,69,-33,-72,-72,-34,]),'CLOCK':([43,63,66,],[52,52,52,]),'INTCONST':([44,71,72,73,74,75,76,77,78,79,80,81,106,],[57,57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,57,]),'TRUE':([44,71,72,73,74,75,76,77,78,79,80,81,106,],[58,58,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,58,]),'FALSE':([44,71,72,73,74,75,76,77,78,79,80,81,106,],[59,59,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,59,]),'COMMA':([50,87,88,95,102,114,],[66,66,-32,-20,109,109,]),'PLUS':([53,54,55,56,57,58,59,89,113,],[72,-55,-56,-68,-69,-70,-71,72,72,]),'MINUS':([53,54,55,56,57,58,59,89,113,],[73,-55,-56,-68,-69,-70,-71,73,73,]),'STAR':([53,54,55,56,57,58,59,89,113,],[74,-55,-56,-68,-69,-70,-71,74,74,]),'DIVIDE':([53,54,55,56,57,58,59,89,113,],[75,-55,-56,-68,-69,-70,-71,75,75,]),'MOD':([53,54,55,56,57,58,59,89,113,],[76,-55,-56,-68,-69,-70,-71,76,76,]),'LAND':([53,54,55,56,57,58,59,89,113,],[77,-55,-56,-68,-69,-70,-71,77,77,]),'LOR':([53,54,55,56,57,58,59,89,113,],[78,-55,-56,-68,-69,-70,-71,78,78,]),'LXOR':([53,54,55,56,57,58,59,89,113,],[79,-55,-56,-68,-69,-70,-71,79,79,]),'LSL':([53,54,55,56,57,58,59,89,113,],[80,-55,-56,-68,-69,-70,-71,80,80,]),'LSR':([53,54,55,56,57,58,59,89,113,],[81,-55,-56,-68,-69,-70,-71,81,81,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'Decls_zero_or_mode':([0,3,28,],[2,14,34,]),'Decls':([0,3,28,],[3,3,3,]),'empty':([0,3,8,9,10,24,28,30,43,48,50,51,60,63,66,82,84,87,93,102,103,111,114,],[4,4,19,19,19,32,4,36,49,64,67,70,83,85,85,91,64,67,104,110,112,116,110,]),'Const_block':([0,3,24,28,],[5,5,31,5,]),'Package_decl':([0,3,28,],[6,6,6,]),'User_op_decl':([0,3,28,],[7,7,7,]),'Package':([0,3,28,],[9,9,9,]),'Op_kind':([0,3,28,],[10,10,10,]),'Const_decl':([8,],[15,]),'Interface_status':([8,10,],[16,23,]),'Visibility_zero_or_one':([8,9,10,],[17,22,17,]),'Visibility':([8,9,10,],[18,18,18,]),'External':([17,],[26,]),'Lv6id':([22,],[28,]),'User_op_decl_1':([30,],[35,]),'Type_expr':([33,86,],[37,93,]),'Params':([35,46,],[42,60,]),'Params_1':([43,],[47,]),'Var_decls':([43,63,],[48,84,]),'Var_id':([43,63,66,],[50,50,87,]),'Var_id_1':([43,63,66,],[51,51,51,]),'Expr':([44,71,106,],[53,89,113,]),'Atom':([44,71,106,],[54,54,54,]),'Arith_expr':([44,71,106,],[55,55,55,]),'Bool_atom':([44,71,106,],[56,56,56,]),'Params_2':([48,84,],[62,92,]),'Var_decls_1':([50,87,],[65,94,]),'Var_id_2':([51,],[68,]),'Bin_arith_op':([53,89,113,],[71,71,71,]),'User_op_decl_2':([60,],[82,]),'User_op_decl_3':([82,],[90,]),'Opt_body':([90,],[96,]),'Equation':([90,],[98,]),'Simple_equation':([90,],[99,]),'Lhs':([90,],[100,]),'Lhs_id':([90,109,],[102,114,]),'Var_decls_2':([93,],[103,]),'Lhs_1':([102,114,],[108,117,]),'Var_decls_3':([103,],[111,]),'Var_decls_4':([111,],[115,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> Decls_zero_or_mode','Program',1,'p_program','scade_compile.py',15),
  ('Decls_zero_or_mode -> Decls Decls_zero_or_mode','Decls_zero_or_mode',2,'p_decls_zero_or_mode','scade_compile.py',20),
  ('Decls_zero_or_mode -> empty','Decls_zero_or_mode',1,'p_decls_zero_or_mode','scade_compile.py',21),
  ('Decls -> Const_block','Decls',1,'p_decls','scade_compile.py',26),
  ('Decls -> Package_decl','Decls',1,'p_decls','scade_compile.py',27),
  ('Decls -> User_op_decl','Decls',1,'p_decls','scade_compile.py',28),
  ('Package_decl -> Package Visibility_zero_or_one Lv6id Decls_zero_or_mode END SEMICOLON','Package_decl',6,'p_package_decl','scade_compile.py',34),
  ('User_op_decl -> Op_kind Interface_status LV6ID User_op_decl_1 Params RETURNS Params User_op_decl_2 User_op_decl_3 Opt_body','User_op_decl',10,'p_user_op_decl','scade_compile.py',37),
  ('Lv6id -> LV6ID','Lv6id',1,'p_Lv6id','scade_compile.py',41),
  ('Op_kind -> FUNCTION','Op_kind',1,'p_op_kind','scade_compile.py',45),
  ('Op_kind -> NODE','Op_kind',1,'p_op_kind','scade_compile.py',46),
  ('Opt_body -> SEMICOLON','Opt_body',1,'p_opt_body','scade_compile.py',51),
  ('Opt_body -> Equation SEMICOLON','Opt_body',2,'p_opt_body','scade_compile.py',52),
  ('Equation -> Simple_equation','Equation',1,'p_equation','scade_compile.py',56),
  ('Simple_equation -> Lhs EQU Expr','Simple_equation',3,'p_simple_equation','scade_compile.py',59),
  ('Lhs -> LPARENTHESE RPARENTHESE','Lhs',2,'p_lhs','scade_compile.py',62),
  ('Lhs -> Lhs_id Lhs_1','Lhs',2,'p_lhs','scade_compile.py',63),
  ('Lhs_1 -> COMMA Lhs_id Lhs_1','Lhs_1',3,'p_lhs_1','scade_compile.py',66),
  ('Lhs_1 -> empty','Lhs_1',1,'p_lhs_1','scade_compile.py',67),
  ('Lhs_id -> LV6ID','Lhs_id',1,'p_lhs_id','scade_compile.py',71),
  ('User_op_decl_1 -> empty','User_op_decl_1',1,'p_user_op_decl_1','scade_compile.py',75),
  ('User_op_decl_2 -> empty','User_op_decl_2',1,'p_user_op_decl_2','scade_compile.py',79),
  ('User_op_decl_3 -> empty','User_op_decl_3',1,'p_user_op_decl_3','scade_compile.py',82),
  ('Params -> LPARENTHESE Params_1 RPARENTHESE','Params',3,'p_params','scade_compile.py',85),
  ('Params_1 -> Var_decls Params_2','Params_1',2,'p_params_1','scade_compile.py',88),
  ('Params_1 -> empty','Params_1',1,'p_params_1','scade_compile.py',89),
  ('Params_2 -> SEMICOLON Var_decls Params_2','Params_2',3,'p_params_2','scade_compile.py',92),
  ('Params_2 -> empty','Params_2',1,'p_params_2','scade_compile.py',93),
  ('Var_decls -> Var_id Var_decls_1 COLON Type_expr Var_decls_2 Var_decls_3 Var_decls_4','Var_decls',7,'p_var_decls','scade_compile.py',95),
  ('Var_decls_1 -> COMMA Var_id Var_decls_1','Var_decls_1',3,'p_var_decls_1','scade_compile.py',99),
  ('Var_decls_1 -> empty','Var_decls_1',1,'p_var_decls_1','scade_compile.py',100),
  ('Var_id -> Var_id_1 Var_id_2 LV6ID','Var_id',3,'p_var_id','scade_compile.py',103),
  ('Var_id_1 -> CLOCK','Var_id_1',1,'p_var_id_1','scade_compile.py',108),
  ('Var_id_1 -> empty','Var_id_1',1,'p_var_id_1','scade_compile.py',109),
  ('Var_id_2 -> PROBE','Var_id_2',1,'p_var_id_2','scade_compile.py',113),
  ('Var_id_2 -> empty','Var_id_2',1,'p_var_id_2','scade_compile.py',114),
  ('Var_decls_2 -> empty','Var_decls_2',1,'p_var_decls_2','scade_compile.py',119),
  ('Var_decls_3 -> empty','Var_decls_3',1,'p_var_decls_3','scade_compile.py',122),
  ('Var_decls_4 -> empty','Var_decls_4',1,'p_var_decls_4','scade_compile.py',125),
  ('Package -> PACKAGE','Package',1,'p_package','scade_compile.py',128),
  ('Const_block -> CONST Const_decl SEMICOLON Const_block','Const_block',4,'p_const_block','scade_compile.py',133),
  ('Const_block -> empty','Const_block',1,'p_const_block','scade_compile.py',134),
  ('Const_decl -> Interface_status LV6ID COLON Type_expr EQU Expr','Const_decl',6,'p_const_decl','scade_compile.py',138),
  ('Const_decl -> Interface_status LV6ID COLON Type_expr','Const_decl',4,'p_const_decl','scade_compile.py',139),
  ('Interface_status -> Visibility_zero_or_one External','Interface_status',2,'p_interface_status','scade_compile.py',158),
  ('Interface_status -> Visibility_zero_or_one','Interface_status',1,'p_interface_status','scade_compile.py',159),
  ('Visibility_zero_or_one -> Visibility','Visibility_zero_or_one',1,'p_visibility_zero_or_one','scade_compile.py',169),
  ('Visibility_zero_or_one -> empty','Visibility_zero_or_one',1,'p_visibility_zero_or_one','scade_compile.py',170),
  ('External -> IMPORTED','External',1,'p_external','scade_compile.py',174),
  ('Visibility -> PRIVATE','Visibility',1,'p_visibility','scade_compile.py',179),
  ('Visibility -> PUBLIC','Visibility',1,'p_visibility','scade_compile.py',180),
  ('Type_expr -> BOOL','Type_expr',1,'p_type_expr','scade_compile.py',185),
  ('Type_expr -> INT32','Type_expr',1,'p_type_expr','scade_compile.py',186),
  ('Type_expr -> INT8','Type_expr',1,'p_type_expr','scade_compile.py',187),
  ('Expr -> Atom','Expr',1,'p_expr','scade_compile.py',193),
  ('Expr -> Arith_expr','Expr',1,'p_expr','scade_compile.py',194),
  ('Arith_expr -> Expr Bin_arith_op Expr','Arith_expr',3,'p_arith_expr','scade_compile.py',198),
  ('Bin_arith_op -> PLUS','Bin_arith_op',1,'p_bin_arith_op','scade_compile.py',201),
  ('Bin_arith_op -> MINUS','Bin_arith_op',1,'p_bin_arith_op','scade_compile.py',202),
  ('Bin_arith_op -> STAR','Bin_arith_op',1,'p_bin_arith_op','scade_compile.py',203),
  ('Bin_arith_op -> DIVIDE','Bin_arith_op',1,'p_bin_arith_op','scade_compile.py',204),
  ('Bin_arith_op -> MOD','Bin_arith_op',1,'p_bin_arith_op','scade_compile.py',205),
  ('Bin_arith_op -> LAND','Bin_arith_op',1,'p_bin_arith_op','scade_compile.py',206),
  ('Bin_arith_op -> LOR','Bin_arith_op',1,'p_bin_arith_op','scade_compile.py',207),
  ('Bin_arith_op -> LXOR','Bin_arith_op',1,'p_bin_arith_op','scade_compile.py',208),
  ('Bin_arith_op -> LSL','Bin_arith_op',1,'p_bin_arith_op','scade_compile.py',209),
  ('Bin_arith_op -> LSR','Bin_arith_op',1,'p_bin_arith_op','scade_compile.py',210),
  ('Atom -> Bool_atom','Atom',1,'p_atom','scade_compile.py',213),
  ('Atom -> INTCONST','Atom',1,'p_atom','scade_compile.py',214),
  ('Bool_atom -> TRUE','Bool_atom',1,'p_bool_atom','scade_compile.py',218),
  ('Bool_atom -> FALSE','Bool_atom',1,'p_bool_atom','scade_compile.py',219),
  ('empty -> <empty>','empty',0,'p_empty','scade_compile.py',226),
]
